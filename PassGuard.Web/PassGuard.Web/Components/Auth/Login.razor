@using System.Net
@using PassGuard.Core.Models
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager Navigation


<MudGrid Class="d-flex justify-end align-up">
    <MudItem xs="12" sm="10" Class="d-flex justify-end">
        <MudPaper Class="pa-4" Style="width: 400px;height: auto;position: relative">
            @if (errorUnauthorized)
            {
                <MudAlert Severity="Severity.Error"
                          ShowCloseIcon="true"
                          CloseIconClicked="(() => CloseErrorUnauthorized())"
                          Style="position: absolute; top: 50%; left:50%; transform: translate(-50%, -50%);
                            background-color: rgba(255, 255, 255, 0.9); z-index: 10; padding: 16px; border-radius: 8px; 
                            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
                            max-width: 400px; width: 100%">Le nom d'utilisateur et/ou le mot de passe sont incorrects"</MudAlert>
            }
            <MudForm @ref="form">
                <h3>Se Connecter</h3>
                <MudTextField T="string"
                              Label="Nom d'utilisateur"
                              Required="true"
                              RequiredError="Le nom d'utilisateur est nécessaire !"
                              @bind-Value="@loginAccountForm.Username"/>
                <MudTextField T="string"
                              Label="Mot de passe"
                              HelperText="Entrer votre mot de passe"
                              InputType="InputType.Password"
                              Required="true"
                              RequiredError="Le mot de passe est nécessaire !"
                              @bind-Value="@loginAccountForm.Password"/>
                <div class="d-flex align-center justify-space-between">
                    <MudButton Variant="Variant.Filled"
                               Color="Color.Primary"
                               Class="ml-auto mt-12"
                               OnClick="submitForm">Se Connecter</MudButton>
                </div>
            </MudForm>
        </MudPaper>
    </MudItem>
</MudGrid>


@code {
    // COMPONENTS
    MudForm form;
    // VALUES
    LoginAccountForm loginAccountForm = new LoginAccountForm();
    private HttpClient Client;
    private bool errorUnauthorized = false;

    
    // Création du Client à l'initialisation du composant
    protected override void OnInitialized()
    {
        Client = HttpClientFactory.CreateClient("ApiClient");
    }

    // ACTION
    private async void submitForm()
    {
        var content = JsonContent.Create(loginAccountForm);

        var response = await Client.PostAsync("https://localhost:7015/api/auth/login", content);

        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/counter");
            StateHasChanged();        }

        if (response.StatusCode == HttpStatusCode.Unauthorized)
        {
            errorUnauthorized = true;
            StateHasChanged();
        }
    }

    private void CloseErrorUnauthorized()
    {
        errorUnauthorized = false;
        StateHasChanged();
    }

}